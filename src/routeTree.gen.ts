/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import type { CreateFileRoute, FileRoutesByPath } from '@tanstack/react-router'

import { Route as rootRouteImport } from './routes/__root'
import { Route as ProtectedRouteRouteImport } from './routes/_protected/route'
import { Route as IndexRouteImport } from './routes/index'
import { Route as ProtectedProfileRouteImport } from './routes/_protected/profile'
import { Route as authRegisterRouteImport } from './routes/(auth)/register'
import { Route as authLogoutRouteImport } from './routes/(auth)/logout'
import { Route as authLoginRouteImport } from './routes/(auth)/login'
import { Route as ProtectedMediaIndexRouteImport } from './routes/_protected/media/index'
import { Route as ProtectedMediaAddRouteImport } from './routes/_protected/media/add'
import { Route as ProtectedFriendNameRouteRouteImport } from './routes/_protected/friend/$name/route'
import { Route as ProtectedMediaViewIdRouteImport } from './routes/_protected/media/view.$id'
import { Route as ProtectedMediaUpdateIdRouteImport } from './routes/_protected/media/update.$id'
import { Route as ProtectedFriendNameMediaIndexRouteImport } from './routes/_protected/friend/$name/media/index'
import { Route as ProtectedFriendNameMediaViewIdRouteImport } from './routes/_protected/friend/$name/media/view.$id'

const ProtectedRouteRoute = ProtectedRouteRouteImport.update({
  id: '/_protected',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const ProtectedProfileRoute = ProtectedProfileRouteImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => ProtectedRouteRoute,
} as any)
const authRegisterRoute = authRegisterRouteImport.update({
  id: '/(auth)/register',
  path: '/register',
  getParentRoute: () => rootRouteImport,
} as any)
const authLogoutRoute = authLogoutRouteImport.update({
  id: '/(auth)/logout',
  path: '/logout',
  getParentRoute: () => rootRouteImport,
} as any)
const authLoginRoute = authLoginRouteImport.update({
  id: '/(auth)/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const ProtectedMediaIndexRoute = ProtectedMediaIndexRouteImport.update({
  id: '/media/',
  path: '/media/',
  getParentRoute: () => ProtectedRouteRoute,
} as any)
const ProtectedMediaAddRoute = ProtectedMediaAddRouteImport.update({
  id: '/media/add',
  path: '/media/add',
  getParentRoute: () => ProtectedRouteRoute,
} as any)
const ProtectedFriendNameRouteRoute =
  ProtectedFriendNameRouteRouteImport.update({
    id: '/friend/$name',
    path: '/friend/$name',
    getParentRoute: () => ProtectedRouteRoute,
  } as any)
const ProtectedMediaViewIdRoute = ProtectedMediaViewIdRouteImport.update({
  id: '/media/view/$id',
  path: '/media/view/$id',
  getParentRoute: () => ProtectedRouteRoute,
} as any)
const ProtectedMediaUpdateIdRoute = ProtectedMediaUpdateIdRouteImport.update({
  id: '/media/update/$id',
  path: '/media/update/$id',
  getParentRoute: () => ProtectedRouteRoute,
} as any)
const ProtectedFriendNameMediaIndexRoute =
  ProtectedFriendNameMediaIndexRouteImport.update({
    id: '/media/',
    path: '/media/',
    getParentRoute: () => ProtectedFriendNameRouteRoute,
  } as any)
const ProtectedFriendNameMediaViewIdRoute =
  ProtectedFriendNameMediaViewIdRouteImport.update({
    id: '/media/view/$id',
    path: '/media/view/$id',
    getParentRoute: () => ProtectedFriendNameRouteRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '': typeof ProtectedRouteRouteWithChildren
  '/login': typeof authLoginRoute
  '/logout': typeof authLogoutRoute
  '/register': typeof authRegisterRoute
  '/profile': typeof ProtectedProfileRoute
  '/friend/$name': typeof ProtectedFriendNameRouteRouteWithChildren
  '/media/add': typeof ProtectedMediaAddRoute
  '/media': typeof ProtectedMediaIndexRoute
  '/media/update/$id': typeof ProtectedMediaUpdateIdRoute
  '/media/view/$id': typeof ProtectedMediaViewIdRoute
  '/friend/$name/media': typeof ProtectedFriendNameMediaIndexRoute
  '/friend/$name/media/view/$id': typeof ProtectedFriendNameMediaViewIdRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '': typeof ProtectedRouteRouteWithChildren
  '/login': typeof authLoginRoute
  '/logout': typeof authLogoutRoute
  '/register': typeof authRegisterRoute
  '/profile': typeof ProtectedProfileRoute
  '/friend/$name': typeof ProtectedFriendNameRouteRouteWithChildren
  '/media/add': typeof ProtectedMediaAddRoute
  '/media': typeof ProtectedMediaIndexRoute
  '/media/update/$id': typeof ProtectedMediaUpdateIdRoute
  '/media/view/$id': typeof ProtectedMediaViewIdRoute
  '/friend/$name/media': typeof ProtectedFriendNameMediaIndexRoute
  '/friend/$name/media/view/$id': typeof ProtectedFriendNameMediaViewIdRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/_protected': typeof ProtectedRouteRouteWithChildren
  '/(auth)/login': typeof authLoginRoute
  '/(auth)/logout': typeof authLogoutRoute
  '/(auth)/register': typeof authRegisterRoute
  '/_protected/profile': typeof ProtectedProfileRoute
  '/_protected/friend/$name': typeof ProtectedFriendNameRouteRouteWithChildren
  '/_protected/media/add': typeof ProtectedMediaAddRoute
  '/_protected/media/': typeof ProtectedMediaIndexRoute
  '/_protected/media/update/$id': typeof ProtectedMediaUpdateIdRoute
  '/_protected/media/view/$id': typeof ProtectedMediaViewIdRoute
  '/_protected/friend/$name/media/': typeof ProtectedFriendNameMediaIndexRoute
  '/_protected/friend/$name/media/view/$id': typeof ProtectedFriendNameMediaViewIdRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | ''
    | '/login'
    | '/logout'
    | '/register'
    | '/profile'
    | '/friend/$name'
    | '/media/add'
    | '/media'
    | '/media/update/$id'
    | '/media/view/$id'
    | '/friend/$name/media'
    | '/friend/$name/media/view/$id'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | ''
    | '/login'
    | '/logout'
    | '/register'
    | '/profile'
    | '/friend/$name'
    | '/media/add'
    | '/media'
    | '/media/update/$id'
    | '/media/view/$id'
    | '/friend/$name/media'
    | '/friend/$name/media/view/$id'
  id:
    | '__root__'
    | '/'
    | '/_protected'
    | '/(auth)/login'
    | '/(auth)/logout'
    | '/(auth)/register'
    | '/_protected/profile'
    | '/_protected/friend/$name'
    | '/_protected/media/add'
    | '/_protected/media/'
    | '/_protected/media/update/$id'
    | '/_protected/media/view/$id'
    | '/_protected/friend/$name/media/'
    | '/_protected/friend/$name/media/view/$id'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  ProtectedRouteRoute: typeof ProtectedRouteRouteWithChildren
  authLoginRoute: typeof authLoginRoute
  authLogoutRoute: typeof authLogoutRoute
  authRegisterRoute: typeof authRegisterRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_protected': {
      id: '/_protected'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof ProtectedRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(auth)/login': {
      id: '/(auth)/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof authLoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(auth)/logout': {
      id: '/(auth)/logout'
      path: '/logout'
      fullPath: '/logout'
      preLoaderRoute: typeof authLogoutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(auth)/register': {
      id: '/(auth)/register'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof authRegisterRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_protected/profile': {
      id: '/_protected/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof ProtectedProfileRouteImport
      parentRoute: typeof ProtectedRouteRoute
    }
    '/_protected/friend/$name': {
      id: '/_protected/friend/$name'
      path: '/friend/$name'
      fullPath: '/friend/$name'
      preLoaderRoute: typeof ProtectedFriendNameRouteRouteImport
      parentRoute: typeof ProtectedRouteRoute
    }
    '/_protected/media/add': {
      id: '/_protected/media/add'
      path: '/media/add'
      fullPath: '/media/add'
      preLoaderRoute: typeof ProtectedMediaAddRouteImport
      parentRoute: typeof ProtectedRouteRoute
    }
    '/_protected/media/': {
      id: '/_protected/media/'
      path: '/media'
      fullPath: '/media'
      preLoaderRoute: typeof ProtectedMediaIndexRouteImport
      parentRoute: typeof ProtectedRouteRoute
    }
    '/_protected/media/update/$id': {
      id: '/_protected/media/update/$id'
      path: '/media/update/$id'
      fullPath: '/media/update/$id'
      preLoaderRoute: typeof ProtectedMediaUpdateIdRouteImport
      parentRoute: typeof ProtectedRouteRoute
    }
    '/_protected/media/view/$id': {
      id: '/_protected/media/view/$id'
      path: '/media/view/$id'
      fullPath: '/media/view/$id'
      preLoaderRoute: typeof ProtectedMediaViewIdRouteImport
      parentRoute: typeof ProtectedRouteRoute
    }
    '/_protected/friend/$name/media/': {
      id: '/_protected/friend/$name/media/'
      path: '/media'
      fullPath: '/friend/$name/media'
      preLoaderRoute: typeof ProtectedFriendNameMediaIndexRouteImport
      parentRoute: typeof ProtectedFriendNameRouteRoute
    }
    '/_protected/friend/$name/media/view/$id': {
      id: '/_protected/friend/$name/media/view/$id'
      path: '/media/view/$id'
      fullPath: '/friend/$name/media/view/$id'
      preLoaderRoute: typeof ProtectedFriendNameMediaViewIdRouteImport
      parentRoute: typeof ProtectedFriendNameRouteRoute
    }
  }
}

declare module './routes/index' {
  const createFileRoute: CreateFileRoute<
    '/',
    FileRoutesByPath['/']['parentRoute'],
    FileRoutesByPath['/']['id'],
    FileRoutesByPath['/']['path'],
    FileRoutesByPath['/']['fullPath']
  >
}
declare module './routes/_protected/route' {
  const createFileRoute: CreateFileRoute<
    '/_protected',
    FileRoutesByPath['/_protected']['parentRoute'],
    FileRoutesByPath['/_protected']['id'],
    FileRoutesByPath['/_protected']['path'],
    FileRoutesByPath['/_protected']['fullPath']
  >
}
declare module './routes/(auth)/login' {
  const createFileRoute: CreateFileRoute<
    '/(auth)/login',
    FileRoutesByPath['/(auth)/login']['parentRoute'],
    FileRoutesByPath['/(auth)/login']['id'],
    FileRoutesByPath['/(auth)/login']['path'],
    FileRoutesByPath['/(auth)/login']['fullPath']
  >
}
declare module './routes/(auth)/logout' {
  const createFileRoute: CreateFileRoute<
    '/(auth)/logout',
    FileRoutesByPath['/(auth)/logout']['parentRoute'],
    FileRoutesByPath['/(auth)/logout']['id'],
    FileRoutesByPath['/(auth)/logout']['path'],
    FileRoutesByPath['/(auth)/logout']['fullPath']
  >
}
declare module './routes/(auth)/register' {
  const createFileRoute: CreateFileRoute<
    '/(auth)/register',
    FileRoutesByPath['/(auth)/register']['parentRoute'],
    FileRoutesByPath['/(auth)/register']['id'],
    FileRoutesByPath['/(auth)/register']['path'],
    FileRoutesByPath['/(auth)/register']['fullPath']
  >
}
declare module './routes/_protected/profile' {
  const createFileRoute: CreateFileRoute<
    '/_protected/profile',
    FileRoutesByPath['/_protected/profile']['parentRoute'],
    FileRoutesByPath['/_protected/profile']['id'],
    FileRoutesByPath['/_protected/profile']['path'],
    FileRoutesByPath['/_protected/profile']['fullPath']
  >
}
declare module './routes/_protected/friend/$name/route' {
  const createFileRoute: CreateFileRoute<
    '/_protected/friend/$name',
    FileRoutesByPath['/_protected/friend/$name']['parentRoute'],
    FileRoutesByPath['/_protected/friend/$name']['id'],
    FileRoutesByPath['/_protected/friend/$name']['path'],
    FileRoutesByPath['/_protected/friend/$name']['fullPath']
  >
}
declare module './routes/_protected/media/add' {
  const createFileRoute: CreateFileRoute<
    '/_protected/media/add',
    FileRoutesByPath['/_protected/media/add']['parentRoute'],
    FileRoutesByPath['/_protected/media/add']['id'],
    FileRoutesByPath['/_protected/media/add']['path'],
    FileRoutesByPath['/_protected/media/add']['fullPath']
  >
}
declare module './routes/_protected/media/index' {
  const createFileRoute: CreateFileRoute<
    '/_protected/media/',
    FileRoutesByPath['/_protected/media/']['parentRoute'],
    FileRoutesByPath['/_protected/media/']['id'],
    FileRoutesByPath['/_protected/media/']['path'],
    FileRoutesByPath['/_protected/media/']['fullPath']
  >
}
declare module './routes/_protected/media/update.$id' {
  const createFileRoute: CreateFileRoute<
    '/_protected/media/update/$id',
    FileRoutesByPath['/_protected/media/update/$id']['parentRoute'],
    FileRoutesByPath['/_protected/media/update/$id']['id'],
    FileRoutesByPath['/_protected/media/update/$id']['path'],
    FileRoutesByPath['/_protected/media/update/$id']['fullPath']
  >
}
declare module './routes/_protected/media/view.$id' {
  const createFileRoute: CreateFileRoute<
    '/_protected/media/view/$id',
    FileRoutesByPath['/_protected/media/view/$id']['parentRoute'],
    FileRoutesByPath['/_protected/media/view/$id']['id'],
    FileRoutesByPath['/_protected/media/view/$id']['path'],
    FileRoutesByPath['/_protected/media/view/$id']['fullPath']
  >
}
declare module './routes/_protected/friend/$name/media/index' {
  const createFileRoute: CreateFileRoute<
    '/_protected/friend/$name/media/',
    FileRoutesByPath['/_protected/friend/$name/media/']['parentRoute'],
    FileRoutesByPath['/_protected/friend/$name/media/']['id'],
    FileRoutesByPath['/_protected/friend/$name/media/']['path'],
    FileRoutesByPath['/_protected/friend/$name/media/']['fullPath']
  >
}
declare module './routes/_protected/friend/$name/media/view.$id' {
  const createFileRoute: CreateFileRoute<
    '/_protected/friend/$name/media/view/$id',
    FileRoutesByPath['/_protected/friend/$name/media/view/$id']['parentRoute'],
    FileRoutesByPath['/_protected/friend/$name/media/view/$id']['id'],
    FileRoutesByPath['/_protected/friend/$name/media/view/$id']['path'],
    FileRoutesByPath['/_protected/friend/$name/media/view/$id']['fullPath']
  >
}

interface ProtectedFriendNameRouteRouteChildren {
  ProtectedFriendNameMediaIndexRoute: typeof ProtectedFriendNameMediaIndexRoute
  ProtectedFriendNameMediaViewIdRoute: typeof ProtectedFriendNameMediaViewIdRoute
}

const ProtectedFriendNameRouteRouteChildren: ProtectedFriendNameRouteRouteChildren =
  {
    ProtectedFriendNameMediaIndexRoute: ProtectedFriendNameMediaIndexRoute,
    ProtectedFriendNameMediaViewIdRoute: ProtectedFriendNameMediaViewIdRoute,
  }

const ProtectedFriendNameRouteRouteWithChildren =
  ProtectedFriendNameRouteRoute._addFileChildren(
    ProtectedFriendNameRouteRouteChildren,
  )

interface ProtectedRouteRouteChildren {
  ProtectedProfileRoute: typeof ProtectedProfileRoute
  ProtectedFriendNameRouteRoute: typeof ProtectedFriendNameRouteRouteWithChildren
  ProtectedMediaAddRoute: typeof ProtectedMediaAddRoute
  ProtectedMediaIndexRoute: typeof ProtectedMediaIndexRoute
  ProtectedMediaUpdateIdRoute: typeof ProtectedMediaUpdateIdRoute
  ProtectedMediaViewIdRoute: typeof ProtectedMediaViewIdRoute
}

const ProtectedRouteRouteChildren: ProtectedRouteRouteChildren = {
  ProtectedProfileRoute: ProtectedProfileRoute,
  ProtectedFriendNameRouteRoute: ProtectedFriendNameRouteRouteWithChildren,
  ProtectedMediaAddRoute: ProtectedMediaAddRoute,
  ProtectedMediaIndexRoute: ProtectedMediaIndexRoute,
  ProtectedMediaUpdateIdRoute: ProtectedMediaUpdateIdRoute,
  ProtectedMediaViewIdRoute: ProtectedMediaViewIdRoute,
}

const ProtectedRouteRouteWithChildren = ProtectedRouteRoute._addFileChildren(
  ProtectedRouteRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ProtectedRouteRoute: ProtectedRouteRouteWithChildren,
  authLoginRoute: authLoginRoute,
  authLogoutRoute: authLogoutRoute,
  authRegisterRoute: authRegisterRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
